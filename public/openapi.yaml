openapi: 3.0.0
info:
  title: Money Transfer API
  description: API for managing users, payment terms, and transactions.
  version: 1.0.0
servers:
  - url: http://10.190.1.16:8081/api
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation error
  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 1|abc...
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
  /logout:
    post:
      summary: Logout a user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out
  /payment-terms:
    get:
      summary: Get all payment terms
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of payment terms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentTerm'
    post:
      summary: Create a new payment term
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Payment term created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTerm'
  /payment-terms/{id}:
    get:
      summary: Get a specific payment term
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The payment term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTerm'
    delete:
      summary: Delete a payment term
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Payment term deleted
  /transactions:
    get:
      summary: Get all transactions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Create a new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStore'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /transactions/{id}:
    get:
      summary: Get a specific transaction
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      summary: Delete a transaction
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Transaction deleted
  /users:
    get:
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a specific user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        balance:
          type: number
          format: float
          example: 1000.50
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserRegister:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        password:
          type: string
          format: password
          example: password123
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: john.doe@example.com
        password:
          type: string
          format: password
          example: password123
    UserUpdate:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        password:
          type: string
          format: password
          example: newpassword123
    PaymentTerm:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Bank Transfer"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Transaction:
      type: object
      properties:
        id:
          type: integer
          example: 1
        owner:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        amount:
          type: number
          format: float
          example: 150.75
        description:
          type: string
          example: "Monthly salary"
        payment_term:
          type: string
          example: "Bank Transfer"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    TransactionStore:
      type: object
      required:
        - owner
        - amount
        - payment_term
      properties:
        owner:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        amount:
          type: number
          format: float
          example: 150.75
        description:
          type: string
          example: "Monthly salary"
        payment_term:
          type: string
          example: "Bank Transfer"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer